[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "citationmap"
version = "0.1.0"
description = "A toolkit for transforming publication records into evidence for immigration petitions"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "CitationMap Team", email = "contact@citationmap.dev"},
]
maintainers = [
    {name = "CitationMap Team", email = "contact@citationmap.dev"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Legal",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Text Processing :: General",
]
keywords = ["citations", "research", "immigration", "eb1a", "o1", "visa"]
requires-python = ">=3.11"
dependencies = [
    "httpx>=0.24.0",
    "pandas>=2.0.0",
    "polars>=0.18.0",
    "typer[all]>=0.9.0",
    "streamlit>=1.25.0",
    "plotly>=5.15.0",
    "folium>=0.14.0",
    "diskcache>=5.6.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "geopy>=2.3.0",
    "weasyprint>=59.0",
    "jinja2>=3.1.0",
    "aiofiles>=23.0.0",
    "python-dotenv>=1.0.0",
    "rich>=13.0.0",
    "asyncio-throttle>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "vcrpy>=4.3.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "coverage[toml]>=7.3.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
    "sphinx-click>=5.0.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "vcrpy>=4.3.0",
]

[project.urls]
Documentation = "https://citationmap.readthedocs.io"
"Source Code" = "https://github.com/username/citationmap"
"Bug Tracker" = "https://github.com/username/citationmap/issues"
Discussions = "https://github.com/username/citationmap/discussions"

[project.scripts]
citationmap = "citationmap.cli.main:app"

[tool.hatch.build.targets.wheel]
packages = ["src/citationmap"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs",
    "/README.md",
    "/LICENSE",
]

# Black configuration
[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["citationmap"]

# MyPy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "folium.*",
    "plotly.*",
    "streamlit.*",
    "geopy.*",
    "diskcache.*",
    "weasyprint.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"

# Coverage configuration
[tool.coverage.run]
source = ["src/citationmap"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov" 